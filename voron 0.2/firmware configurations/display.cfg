

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 31
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)


[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0


[menu __main __bed_leveling]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Level Bed


[menu __main __bed_leveling __preheat]
type: command
name: Preheat all
gcode: 
    M140 S100 
    M104 S240


[menu __main __bed_leveling __home]
type: command
name: Home All
gcode: G28


[menu __main __bed_leveling __start]
type: command
name: Start
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: 
    G28
    BED_SCREWS_ADJUST

[menu __main __bed_leveling __accept]
type: command
name: Accept
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: accept

[menu __main __bed_leveling __adjust]
type: command
name: Adjusted
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: adjusted

[menu __main __prepare __bed_leveling __abort_screws]
type: command
name: Abort
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: abort

#Shutdown from: https://klipper.discourse.group/t/shutdown-command-to-the-raspberry/584/3
[delayed_gcode shutdown_machine]
gcode:
     {action_call_remote_method("shutdown_machine")}
initial_duration: 0.0
[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Safely Shutdown
gcode:
     M117 Shutdown_RPI
     M118 Shutdown_RPI
     { menu.exit() }    
     UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1 


   
#####################################################################
#       Disable items from stock- uncomment to disable
#####################################################################
[menu __main __octoprint]
type: disabled
#[menu __main __temp]
#type:disabled
#[menu __main __temp __preheat_pla]
#type: disabled
#[menu __main __temp __preheat_abs]
#type: disabled
[menu __main __filament __loadf]
type: disabled
[menu __main __filament __loads]
type: disabled
[menu __main __filament __unloadf]
type: disabled
[menu __main __filament __unloads]
type: disabled
#[menu __main __filament __feed]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __hotend0_target]
#type: disabled
#[menu __main __temp __cooldown]
#type: disabled
[menu __main __setup __calib __delta_calib_auto]
type: disabled
[menu __main __setup __calib __delta_calib_man]
type: disabled
#[menu __main __control __move_10mm]
#type: disabled
#[menu __main __control __move_01mm]
#type: disabled
#[menu __main __setup __calib __bedprobe]
#type: disabled
#[menu __main __setup __dump]
#type: disabled
#[menu __main __control __fanonoff]
#type: disabled
#[menu __main __setup __calib]
#type: disabled


[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S65
    M104 S220

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S220

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S65

[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S250

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S250

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S110


[menu __main __temp __preheat_petg]
type: list
name: Preheat PETG


[menu __main __temp __preheat_petg __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S80
    M104 S245


[menu __main __temp __preheat_petg __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S245


[menu __main __temp __preheat_petg __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S80


[menu __main __filament __unload]
type: command
name: load filament
gcode: LOAD_FILAMENT


[menu __main __filament __load]
type: command
name: unload filament
gcode: UNLOAD_FILAMENT


#[menu __main __network]
#type: list
#name: Network


#[menu __main __network _mdns]
#type: command
#name: mDNS: {printer.network_status.mdns}


#[menu __main __network _ethip]
#type: command
#name: Eth IP: {printer.network_status.ethip}


#[menu __main __network _wifissid]
#type: command
#name: Wifi SSID: {printer.network_status.wifissid}


#[menu __main __network _wifiip]
#type: command
#name: Wifi IP: {printer.network_status.wifiip}

